@function scale-down($values, $key) {
    @return calc(map.get($values, $key) / map.get($scale-factors, $key))
}

@function scale-data($values, $is-moon: null) {
    $colour: rgb(255, 255, 255);

    @if map-has-key($map: $values, $key: "colour") {
        $colour: #{map.get($values, "colour")}
    }

    $radius: scale-down($values, "radius");
    $distance: scale-down($values, "distance");
    $period: scale-down($values, "period");

    @if $is-moon {
        $radius: calc($radius * map.get($moon-weightings, "radius"));
        $distance: calc($distance * map.get($moon-weightings, "distance"));
        $period: calc($period * map.get($moon-weightings, "period"))
    }

    @return (radius: $radius,
        distance: $distance,
        period: $period,
        colour: $colour)
}

@mixin tooltip($name, $data) {
    content: "#{$name}";
    color: #{map.get($data, "colour")};
    position: absolute;
    left: 100%;
    padding: 0.2rem;
    font-size: 0.8rem;

    display: none;
}

@mixin celestial-body($name, $data) {
    width: calc(map.get($data, "radius") * 2) + vw;
    animation: orbit-#{$name} #{map.get($data, "period")}s linear infinite;
    background-color: #{map.get($data, "colour")};
}

@mixin orbit($data, $additional-radius) {
    $distance: map.get($data, "distance");
    0% {
        transform: rotate(0deg) translateX(#{calc($distance + $additional-radius)} + vw) rotate(0deg);
    }

    100% {
        transform: rotate(-360deg) translateX(#{calc($distance + $additional-radius)} + vw) rotate(360deg);
    }
}

@mixin orbital-mechanics($orbiter, $values, $parent: null) {
    $data: scale-data($values, $parent);

    $additional-radius: 0;

    @if $parent {
        $additional-radius: calc(map.get(scale-data(map.get($planets, $parent)), "radius") + map.get($moon-weightings, "fudge"));
    }


    ##{$orbiter} {
        @include celestial-body($orbiter, $data)
    }

    @keyframes orbit-#{$orbiter} {
        @include orbit($data, $additional-radius)
    }

    ##{$orbiter}::after {
        @include tooltip($orbiter, $data)
    }

    ##{$orbiter}:hover::after {
        display: block;
    }

}